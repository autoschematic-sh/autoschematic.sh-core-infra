Service(
    task_definition: "arn:aws:ecs:us-east-1:467992565187:task-definition/backend_autoschematic_sh:2",
    desired_count: 1,
    launch_type: "FARGATE",
    capacity_provider_strategy: [],
    platform_version: "LATEST",
    platform_family: None,
    deployment_configuration: DeploymentConfiguration(
        deployment_circuit_breaker: DeploymentCircuitBreaker(
            enable: true,
            rollback: true,
        ),
        maximum_percent: 200,
        minimum_healthy_percent: 100,
    ),
    network_configuration: NetworkConfiguration(
        awsvpc_configuration: AwsVpcConfiguration(
            subnets: [
                "out://aws/vpc/us-east-1/vpcs/autoschematic-ecs/subnets/alpha.ron[subnet_id]",
                "out://aws/vpc/us-east-1/vpcs/autoschematic-ecs/subnets/beta.ron[subnet_id]",
            ],
            security_groups: [
                "out://aws/vpc/us-east-1/vpcs/autoschematic-ecs/security_groups/default.ron[security_group_id]",
            ],
            assign_public_ip: "ENABLED",
        ),
    ),
    placement_strategy: [],
    placement_constraints: [],
    
    // some other great thing!
    // test this as well
    load_balancers: [
        LoadBalancer(
            target_group_arn: "out://aws/elb/us-east-1/target_groups/backend-autoschematic-sh.ron[target_group_arn]",
            // load_balancer_name: "backend-autoschematic-sh",
            container_name: "backend",
            container_port: 8080,
        ),
    ],
    service_registries: [],
    scheduling_strategy: "REPLICA",
    enable_ecs_managed_tags: true,
    propagate_tags: "SERVICE",
    enable_execute_command: true,
    tags: {
        
    },
)
